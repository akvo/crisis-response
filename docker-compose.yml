version: "3.9"

services:
  mainnetwork:
    image: alpine
    command: tail -f /dev/null
    expose:
      - "3000"
      - "8000"
    ports:
      - "3000:80" # Nginx
      - "8000:8080"
  nginx:
    image: nginx:1.19-alpine
    restart: unless-stopped
    network_mode: service:mainnetwork
    volumes:
      - ./:/var/www/html:delegated
      - .docker/nginx:/etc/nginx/conf.d
    depends_on:
      - app
  app:
    build:
      args:
        USER_ID: ${UID-1000}
      context: .
      dockerfile: .docker/Dockerfile-php
    restart: unless-stopped
    network_mode: service:mainnetwork
    environment:
      APP_NAME: "Crisis Response"
      APP_ENV: local
      APP_DEBUG: "true"
      APP_KEY: "base64:g/CP4GLBx5v1E4GX2FiDe1MYZH/oiM7GDuq88bmR2Zk="
      DB_DATABASE: crisis-response
      DB_USERNAME: akvo
      DB_PASSWORD: secret
      AKVO_FLOW_WEB_API: $AKVO_FLOW_WEB_API
      AKVO_INSTANCE: $AKVO_INSTANCE
      AKVO_CLIENT_ID: $AKVO_CLIENT_ID
      AKVO_USERNAME: $AKVO_USERNAME
      AKVO_PASSWORD: $AKVO_PASSWORD
      MAPS_GOOGLE_APIS: $MAPS_GOOGLE_APIS
      MIX_PUBLIC_URL: $MIX_PUBLIC_URL
    volumes:
      - ./:/var/www/html:delegated
      - ${HOME}/.composer:/home/akvo/.composer
    command: .docker/start-app.sh
    depends_on:
      - db
  ui:
    build:
      context: .
      dockerfile: .docker/Dockerfile-node
    restart: unless-stopped
    network_mode: service:mainnetwork
    volumes:
      - ./:/var/www/html:delegated
    command: .docker/start-ui.sh
    depends_on:
      - app
  db:
    image: mysql:5.7
    restart: unless-stopped
    network_mode: service:mainnetwork
    environment:
      MYSQL_DATABASE: crisis-response
      MYSQL_USER: akvo
      MYSQL_PASSWORD: secret
      MYSQL_ROOT_PASSWORD: secret
    volumes:
      - dbdata:/var/lib/mysql

volumes:
  dbdata: {}
